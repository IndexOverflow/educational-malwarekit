using System;
using System.Linq;
using EasyConsole;
using EducationalMalwareKit.Domain.Build;
using EducationalMalwareKit.Domain.Payloads;

namespace EducationalMalwareKit.CLI.Pages
{
    public class UserOptionsPage : Page
    {
        public UserOptionsPage(Program program) : base("Options", program)
        {
        }

        public override void Display()
        {
            base.Display();

            var userOptions = new UserOptions();
            userOptions.Debug = InputHelper.ParseStringAsBool(Input.ReadString("Enable debug mode [N]/[y]:"));
            userOptions.CleanOutputDirectory = InputHelper.ParseStringAsBool(Input.ReadString("Clean output dir [N]/[y]:"));
            userOptions.ExecutableName = Input.ReadString("EXE name:");

            var payloadManifest = Kernel.MalwareBuild.Manifest;

            if (payloadManifest.Language == PayloadManifest.LanguageCPlusPlus)
            {
                if (Kernel.HasPackager())
                {
                    userOptions.PackageOutput = InputHelper.ParseStringAsBool(Input.ReadString("Package (compress) output [N]/[y]:"));
                }
                else
                {
                    Output.WriteLine(ConsoleColor.Red, "Can't compress output, packager not configured");
                }
            }

            if (payloadManifest.Config.Any())
            {
                Output.WriteLine("Configure payload ...\n");

                foreach (var key in payloadManifest.Config.Keys.ToList())
                {
                    var configValue = InputHelper.ReadRequiredString(key.ToUpper() + "=>");
                    payloadManifest.Config[key] = configValue;
                }
            }

            Kernel.MalwareBuild.UserOptions = userOptions;
            Program.NavigateTo<BuildPage>();
        }
    }
}
