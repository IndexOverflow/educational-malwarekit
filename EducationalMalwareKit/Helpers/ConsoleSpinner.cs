using System;
using System.Threading;
using System.Threading.Tasks;

namespace EducationalMalwareKit.Helpers
{
    /// <summary>
    /// Credits: https://gist.github.com/scolestock/37af19d1fe9266ec98f57ab40d700951
    /// </summary>
    public class ConsoleSpinner
    {
        /// <summary>
        /// Displays a text spinner and ellipses until a task completes.
        /// </summary>
        /// <param name="task">Task to watch for completion</param>
        public static void UntilTaskComplete(Task task)
        {
            try
            {
                char[] spinner = new char[] { '|', '/', '-', '\\' };

                Console.Write("\r\nWorking ..." + "     ");
                bool oldCursorVisibility = Console.CursorVisible;
                Console.CursorVisible = false;

                int spinnerCount = 0;
                int dotCount = 0;
                int dotPause = 0;

                // Account for scrolling behavior at bottom of screen
               // var fudge = (Console.BufferHeight - Console.CursorTop == 1) ? 0 : 1;
                Console.SetCursorPosition(Console.CursorLeft, Console.CursorTop);

                while (!task.IsCompleted)
                {
                    string spinnerText = string.Empty;
                    spinnerText = spinnerText.PadRight(dotCount, '.');
                    spinnerText = spinnerText.PadRight(4, ' ');
                    spinnerText += spinner[spinnerCount];

                    int x = Console.CursorLeft;
                    int y = Console.CursorTop;

                    Console.CursorLeft = (x - 5) >= 0 ? x - 5 : x;
                    Console.Write(spinnerText);

                    if (++spinnerCount > 3)
                        spinnerCount = 0;

                    if (++dotPause == 2)
                    {
                        dotPause = 0;
                        if (++dotCount == 4)
                            dotCount = 0;
                    }

                    Thread.Sleep(100);
                }

                var left = Console.CursorLeft;
                Console.CursorLeft = (left - 5) >= 0 ? left - 5 : left;
                Console.CursorVisible = oldCursorVisibility;
                Console.WriteLine("Done.");
            }
            catch (Exception)
            {
                Console.WriteLine("Exiting spinner while task " + task.Status);
            }
        }
    }
}
