using System;
using System.IO;
using EducationalMalwareKit.Options;
using Newtonsoft.Json;

namespace EducationalMalwareKit
{
    internal static class FileHelper
    {
        private const string EducationalMalwareKitFileFormat = ".EMK";

        public static T ReadJsonFile<T>(string filePath)
        {
            T result;

            if (!File.Exists(filePath))
            {
                throw new ArgumentException($"Unable to find file at {filePath}");
            }

            using (var reader = File.OpenText(filePath))
            {
                var serializer = new JsonSerializer();
                result = (T)serializer.Deserialize(reader, typeof(T));
            }

            return result;
        }

        public static void CreateBuildFile(ExpertOptions options)
        {
            var filePath = Path.Combine(options.OutputDirectoryPath, options.OutputName)
                            + EducationalMalwareKitFileFormat;

            options.EmkVersion = typeof(Emk).Assembly.GetName().Version.ToString();

            using (var writer = File.CreateText(filePath))
            {
                var serializer = new JsonSerializer();
                serializer.Serialize(writer, options);
            }
        }

        public static bool IsPathValidRootedLocal(string pathString)
        {
            Uri pathUri;
            var isValidUri = Uri.TryCreate(pathString, UriKind.Absolute, out pathUri);
            return isValidUri && pathUri != null && pathUri.IsLoopback;
        }
    }
}
