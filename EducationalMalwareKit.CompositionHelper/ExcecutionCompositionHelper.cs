using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.ComponentModel.Composition;
using System.ComponentModel.Composition.Hosting;
using System.IO;
using System.Reflection;
using EducationalMalwareKit.Contracts;

namespace EducationalMalwareKit.CompositionHelper
{
    public class ExcecutionCompositionHelper
    {
        [Import]
        public Lazy<IEducationalMalwarePayload> MalwarePayload { get; set; }

        public bool IsValidAssembly(string payloadDirectoryPath)
        {
            if (!Directory.Exists(payloadDirectoryPath))
            {
                return false;
            }

            var directoryCatalog = new DirectoryCatalog(payloadDirectoryPath, "*.dll");
            var container = new CompositionContainer(directoryCatalog);
            container.ComposeParts(this);

            return MalwarePayload != null;
        }

        public static string GetPluginsDirectory()
        {
            var currentDir = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
            return Path.Combine(currentDir, "Plugins");
        }

        private static bool EnsurePluginsFolderExist()
        {
            var pluginsDir = GetPluginsDirectory();

            if (Directory.Exists(pluginsDir))
            {
                return true;
            }

            Directory.CreateDirectory(pluginsDir);
            return false;
        }
    }
}
