//using System.Collections.Generic;
//using System.Runtime.InteropServices;
//using System;
//using System.IO;
//using System.Reflection;
//using System.Text;

//namespace { EmkNamespace } 
//{
//	internal class {EmkMainClass}
//	{
//		[DllImport("Kernel32")]
//private static extern bool SetConsoleCtrlHandler(EventHandler handler, bool add);
//private delegate bool EventHandler();
//private static EventHandler _handler;

//private static {PayloadMainClass} _runMe;

//		private static bool Handler()
//{
//    _runMe.OnHalt();
//    return false;
//}

//public static void Main(string[] pargs)
//{
//    try
//    {
//        AppDomain.CurrentDomain.AssemblyResolve += (sender, args) =>
//        {
//            var assemblyName = new AssemblyName(args.Name).Name;

//            if (assemblyName.EndsWith(".resources"))
//            {
//                return null;
//            }

//            var dllName = assemblyName + ".dll";
//            string loadFrom;

//            using (Stream s = Assembly.GetEntryAssembly().GetManifestResourceStream(dllName))
//            {
//                byte[] data = new byte[s.Length];
//                loadFrom = XXTea.Decrypt(Encoding.UTF8.GetString(data), "secretsareus");
//            }

//            return Assembly.Load(Encoding.UTF8.GetBytes(loadFrom));
//        };

//        Run();
//    }
//    catch
//    {
//    }
//}

//private static void Run()
//{
//    _handler += Handler;
//    SetConsoleCtrlHandler(_handler, true);

//    Dictionary<string, string> config = { PayloadConfig };

//    _runMe = new { PayloadMainClass }();
//    _runMe.Run(config);
//}
//	}
//}