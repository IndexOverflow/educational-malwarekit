using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System;
using System.IO;
using System.Reflection;
using System.Text;

internal class bbb
{
	[DllImport("Kernel32")]
	private static extern bool SetConsoleCtrlHandler(EventHandler handler, bool add);

	[DllImport("kernel32.dll")]
	private static extern IntPtr GetConsoleWindow();

	[DllImport("user32.dll")]
	private static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);

	private const int SW_HIDE = 0;
	private const int SW_SHOW = 5;

	private delegate bool EventHandler();
	private static EventHandler _handler;

	private static {{mainClass}} _whoami;

	private static bool Handler()
	{	
		{{#if haltMethod}}
		_whoami.OnHalt();
		{{/if}}
		
		return false;
	}

	public static void Main(string[] pargs)
	{
		ShowWindow(GetConsoleWindow(), SW_HIDE);

		{{#if debug}}
		ShowWindow(GetConsoleWindow(), SW_SHOW);
		Console.WriteLine("Attach debugger now ...");
		Console.ReadKey();
          
		if (System.Diagnostics.Debugger.IsAttached)
        {
            System.Diagnostics.Debugger.Break();
        }
		{{/if}}

		try 
		{
			Go();
		}
		catch (Exception ex) {
			{{#if debug}}
			Console.WriteLine(ex.Message);
			{{/if}}
		}
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	private static void Go() 
	{
		_handler += Handler;
		SetConsoleCtrlHandler(_handler, true);
		
		_whoami = new {{mainClass}}();
		_whoami.{{initMethod}}();
	}
}
