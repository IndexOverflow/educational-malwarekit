using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using EducationalMalwareKit.Domain.Build;
using EducationalMalwareKit.Domain.Build.Compilers;

namespace EducationalMalwareKit.Assembler
{
    internal static class FileHandler
    {  
        public static string WriteMainClassToFile(string code, CompilerArguments compilerArguments)
        {
            var workingDir = compilerArguments.WorkingDirectory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString());
            Directory.CreateDirectory(workingDir);

            var fileExtension = GetFileExtension(compilerArguments);
            var filePath = Path.Combine(workingDir, "main" + fileExtension);

            using (var writer = File.CreateText(filePath))
            {
                writer.Write(code);
                writer.Close();
            }

            return filePath;
        }

        private static string GetFileExtension(CompilerArguments compilerArguments)
        {
            if (compilerArguments is CPlusPlusCompilerArguments)
            {
                return ".cpp";
            }

            //if (compilerArguments is CSharpCompilerArguments)
            //{
            //    return ".cs";
            //}

            throw new ArgumentException("Cannot find file extension for provided language");
        }
    }
}
